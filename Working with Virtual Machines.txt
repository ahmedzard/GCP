#Working with Virtual Machines

#Objectives
In this lab, you learn how to perform the following tasks:

	- Customize an application server

	- Install and configure necessary software

	- Configure network access

	- Schedule regular backups
	
Task 1: Create the VM
	1. Create a compute engine virtual machine usning the gcloud command-line	
		gcloud compute instances create mc-server --zone=us-central1-a --subnet=default  --network-tier=PREMIUM --maintenance-policy=MIGRATE --scopes=https://www.googleapis.com/auth/servicecontrol,https://www.googleapis.com/auth/service.management.readonly,https://www.googleapis.com/auth/logging.write,https://www.googleapis.com/auth/monitoring.write,https://www.googleapis.com/auth/trace.append,https://www.googleapis.com/auth/devstorage.read_write --tags=minecraft-server --image=debian-9-stretch-v20200910 --image-project=debian-cloud --boot-disk-size=10GB --boot-disk-type=pd-standard --boot-disk-device-name=mc-server --create-disk=mode=rw,size=50,type=projects/qwiklabs-gcp-02-c4f1bcd435fb/zones/us-central1-a/diskTypes/pd-ssd,name=minecraft-disk,device-name=minecraft-disk --reservation-affinity=any


Task 2: Prepare the data disk
	- connect to my-vm-2 ssh using the following command:
		gcloud compute ssh mc-server
			If prompted to continue, type n
	- To create a directory that serves as the mount point for the data disk, run the following command:
		sudo mkdir -p /home/minecraft
	- To format the disk, run the following command:
		sudo mkfs.ext4 -F -E lazy_itable_init=0,\
		lazy_journal_init=0,discard \
		/dev/disk/by-id/google-minecraft-disk
	- To mount the disk, run the following command:
		sudo mount -o discard,defaults /dev/disk/by-id/google-minecraft-disk /home/minecraft

Task 3: Install and run the application

	- In the SSH terminal for mc-server, to update the Debian repositories on the VM, run the following command:
		sudo apt-get update
	- After the repositories are updated, to install the headless JRE, run the following command:
		sudo apt-get install -y default-jre-headless
	- To navigate to the directory where the persistent disk is mounted, run the following command:
		cd /home/minecraft
	- To install wget, run the following command:
		sudo apt-get install wget
			If prompted to continue, type Y
	- To download the current Minecraft server JAR file (1.11.2 JAR), run the following command:	
		sudo wget https://launcher.mojang.com/v1/objects/d0d0fe2b1dc6ab4c65554cb734270872b72dadd6/server.jar
		
	- To initialize the Minecraft server, run the following command:	
		sudo java -Xmx1024M -Xms1024M -jar server.jar nogui

	- To see the files that were created in the first initialization of the Minecraft server, run the following command:
		sudo ls -l
	- To edit the EULA, run the following command:
		sudo nano eula.txt
	- Change the last line of the file from eula=false to eula=true
	  Press Ctrl+O, ENTER to save the file and then press Ctrl+X to exit nano
	- To install screen, run the following command:
		sudo apt-get install -y screen
	- To start your Minecraft server in a screen virtual terminal, run the following command: (Use the -S flag to name your terminal mcs)
		sudo screen -S mcs java -Xmx1024M -Xms1024M -jar server.jar nogui
	- To detach the screen terminal, press Ctrl+A, Ctrl+D. The terminal continues to run in the background. To reattach the terminal, run the following command:
		sudo screen -r mcs
	- If necessary, exit the screen terminal by pressing Ctrl+A, Ctrl+D
	- To exit the SSH terminal, run the following command:
		exit


Task 4: Allow client traffic
	- to Create a firewall rule, use the following command
		gcloud compute firewall-rules create minecraft-rule --direction=INGRESS --priority=1000 --network=default --action=ALLOW --rules=tcp:25565 --source-ranges=0.0.0.0/0 --target-tags=minecraft-server
	- verify the instance availability and get its external ip from the following command
		gcloud compute instances list
	- Use the following website to test your Minecraft server: https://mcsrvstat.us/
		curl https://mcsrvstat.us/	
	or 
		curl https://dinnerbone.com/minecraft/tools/status/


Task 5: Schedule regular backups
	- Create a Cloud Storage bucket using the following command
		gcloud compute ssh mc-server
			If prompted to continue, type n
	- Create a globally unique bucket name, and store it in the environment variable YOUR_BUCKET_NAME. To make it unique, you can use your Project ID. Run the following command:
		export YOUR_BUCKET_NAME=<Enter your bucket name here>
	- Verify it with echo:
		echo $YOUR_BUCKET_NAME
	- To create the bucket using the gsutil tool, part of the Cloud SDK, run the following command:
		gsutil mb gs://$YOUR_BUCKET_NAME-minecraft-backup
	- In the mc-server SSH terminal, navigate to your home directory:
		cd /home/minecraft
	- To create the script, run the following command:
		sudo nano /home/minecraft/backup.sh
	- Copy and paste the following script into the file:
		#!/bin/bash
		screen -r mcs -X stuff '/save-all\n/save-off\n'
		/usr/bin/gsutil cp -R ${BASH_SOURCE%/*}/world gs://${YOUR_BUCKET_NAME}-minecraft-backup/$(date "+%Y%m%d-%H%M%S")-world
		screen -r mcs -X stuff '/save-on\n'

	- Press Ctrl+O, ENTER to save the file, and press Ctrl+X to exit nano
	- To make the script executable, run the following command:
		sudo chmod 755 /home/minecraft/backup.sh
	- In the mc-server SSH terminal, run the backup script:
		. /home/minecraft/backup.sh
	- After the script finishes, return to the Cloud Console.
	
	- In the mc-server SSH terminal, open the cron table for editing:
		sudo crontab -e
	- When you are prompted to select an editor, type the number corresponding to nano, and press ENTER
	- At the bottom of the cron table, paste the following line:
		0 */4 * * * /home/minecraft/backup.sh
	- Press Ctrl+O, ENTER to save the cron table, and press Ctrl+X to exit nano

Task 6: Server maintenance
	- In the mc-server SSH terminal, run the following command:
		sudo screen -r -X stuff '/stop\n'
	- stop the vm instance using the following command 
		gcloud compute instances stop mc-server
	- to Automate server maintenance with startup and shutdown scripts use the following commands
		gcloud compute instances add-metadata mc-server --metadata=startup-script-url="https://storage.googleapis.com/cloud-training/archinfra/mcserver/startup.sh"
			If prompted to continue, type n
		gcloud compute instances add-metadata mc-server --metadata=shutdown-script-url="https://storage.googleapis.com/cloud-training/archinfra/mcserver/shutdown.sh"
			If prompted to continue, type n





